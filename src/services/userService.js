// src/services/userService.js - –° –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –≤ Authentication
import {
    getUserProfile,
    createUserProfile,
    updateLastLogin,
    grantCourseAccess,
    revokeCourseAccess,
    enrollInCourse,
    getCourseProgress as getFirestoreCourseProgress,
    recordVideoWatch,
    markVideoAsCompleted,
    getCompletedVideos,
    startUserSession,
    endUserSession,
    getActivityStats,
    getAllUsers
  } from '../firebase/firestore';
  
  // –î–æ–±–∞–≤—è–º–µ Firebase Auth —Ñ—É–Ω–∫—Ü–∏–∏
  import { createUser } from '../firebaseAuth';
  
  // –†–æ–ª–∏ –∏ —Ç–µ—Ö–Ω–∏—Ç–µ –ø—Ä–∞–≤–∞
  export const ROLES = {
    ADMIN: 'admin',
    TEACHER: 'teacher',
    STUDENT: 'student',
    GUEST: 'guest'
  };
  
  export const ROLE_DEFINITIONS = {
    [ROLES.ADMIN]: {
      name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      color: 'bg-red-100 text-red-800',
      permissions: ['view_all_courses', 'manage_users', 'manage_content', 'view_analytics'],
      defaultCourses: ['basic', 'intermediate', 'advanced', 'expert']
    },
    [ROLES.TEACHER]: {
      name: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª',
      color: 'bg-green-100 text-green-800',
      permissions: ['view_courses', 'manage_content', 'view_student_progress'],
      defaultCourses: ['basic', 'intermediate', 'advanced']
    },
    [ROLES.STUDENT]: {
      name: '–°—Ç—É–¥–µ–Ω—Ç',
      color: 'bg-blue-100 text-blue-800',
      permissions: ['view_assigned_courses', 'track_progress'],
      defaultCourses: ['basic']
    },
    [ROLES.GUEST]: {
      name: '–ì–æ—Å—Ç',
      color: 'bg-gray-100 text-gray-800',
      permissions: ['view_public_content'],
      defaultCourses: []
    }
  };

  // ============= –§–£–ù–ö–¶–ò–Ø –ó–ê –°–™–ó–î–ê–í–ê–ù–ï –ù–ê –ü–û–¢–†–ï–ë–ò–¢–ï–õ –ò –í AUTH –ò –í–™–í FIRESTORE =============
  
  /**
   * –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –≤ Authentication + Firestore
   */
 export const createNewUser = async (email, password, userData = {}) => {
  try {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—Ç–µ
    if (typeof email !== 'string' || typeof password !== 'string') {
      return { success: false, error: 'Email –∏ –ø–∞—Ä–æ–ª–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–∞ string' };
    }
    
    console.log(`üîê –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: ${email}`);
    console.log(`üìù –ü–∞—Ä–æ–ª–∞ —Ç–∏–ø: ${typeof password}, –¥—ä–ª–∂–∏–Ω–∞: ${password.length}`);
    
    // 1. –ü—ä—Ä–≤–æ —Å—ä–∑–¥–∞–≤–∞–º–µ –∞–∫–∞—É–Ω—Ç–∞ –≤ Firebase Authentication
    const authResult = await createUser(email, password);
    
    // ... –æ—Å—Ç–∞–Ω–∞–ª–∏—è –∫–æ–¥
  } catch (error) {
    console.error('‚ùå –û–±—â –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª:', error);
    return { success: false, error: error.message };
  }
};

  // ============= –°–™–ó–î–ê–í–ê–ù–ï –ù–ê –î–ï–ú–û –ü–û–¢–†–ï–ë–ò–¢–ï–õ–ò –° –ê–í–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø =============
  
  /**
   * –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ –≤ Authentication + Firestore
   */
  export const createDemoUsersWithAuth = async () => {
    const demoUsers = [
      {
        email: 'admin@iru.bg',
        password: 'admin123',
        displayName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        role: ROLES.ADMIN,
        courses: ['basic', 'intermediate', 'advanced', 'expert']
      },
      {
        email: 'teacher@iru.bg',
        password: 'teacher123',
        displayName: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª',
        role: ROLES.TEACHER,
        courses: ['basic', 'intermediate', 'advanced']
      },
      {
        email: 'student@iru.bg',
        password: 'student123',
        displayName: '–°—Ç—É–¥–µ–Ω—Ç',
        role: ROLES.STUDENT,
        courses: ['basic']
      },
      {
        email: 'student2@iru.bg',
        password: 'student123',
        displayName: '–ù–∞–ø—Ä–µ–¥–Ω–∞–ª —Å—Ç—É–¥–µ–Ω—Ç',
        role: ROLES.STUDENT,
        courses: ['basic', 'intermediate']
      }
    ];

    console.log('üöÄ –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ –≤ Authentication + Firestore...');
    
    const results = [];
    
    for (const user of demoUsers) {
      try {
        console.log(`\nüìù –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ ${user.email}...`);
        
        const result = await createNewUser(user.email, user.password, {
          displayName: user.displayName,
          role: user.role,
          courses: user.courses
        });
        
        if (result.success) {
          console.log(`‚úÖ ${user.email} - —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω`);
          results.push({ email: user.email, success: true });
        } else {
          console.log(`‚ö†Ô∏è ${user.email} - ${result.error}`);
          results.push({ email: user.email, success: false, error: result.error });
        }
        
        // –ú–∞–ª–∫–∞ –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—ä–∑–¥–∞–≤–∞–Ω–µ—Ç–æ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏
        await new Promise(resolve => setTimeout(resolve, 1000));
        
      } catch (error) {
        console.error(`‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ ${user.email}:`, error);
        results.push({ email: user.email, success: false, error: error.message });
      }
    }
    
    console.log('\nüìä –†–µ–∑—É–ª—Ç–∞—Ç–∏ –æ—Ç —Å—ä–∑–¥–∞–≤–∞–Ω–µ—Ç–æ:');
    console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
    console.log('‚îÇ Email               ‚îÇ –°—Ç–∞—Ç—É—Å          ‚îÇ –î–µ—Ç–∞–π–ª–∏                         ‚îÇ');
    console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
    
    results.forEach(result => {
      const status = result.success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –ì—Ä–µ—à–∫–∞';
      const details = result.success ? 'Auth + Firestore' : result.error?.substring(0, 25) + '...';
      console.log(`‚îÇ ${result.email.padEnd(19)} ‚îÇ ${status.padEnd(15)} ‚îÇ ${details.padEnd(31)} ‚îÇ`);
    });
    
    console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');
    
    const successCount = results.filter(r => r.success).length;
    console.log(`\nüéØ –°—ä–∑–¥–∞–¥–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ: ${successCount}/${results.length} –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏`);
    
    if (successCount > 0) {
      console.log('\nüîë –ú–æ–∂–µ—Ç–µ –¥–∞ –≤–ª–µ–∑–µ—Ç–µ —Å:');
      results.filter(r => r.success).forEach(result => {
        const userInfo = demoUsers.find(u => u.email === result.email);
        console.log(`   ‚Ä¢ ${result.email} / ${userInfo.password}`);
      });
    }
    
    return results;
  };

  // ============= –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–ê –§–£–ù–ö–¶–ò–Ø –ó–ê –°–™–ó–î–ê–í–ê–ù–ï –ù–ê –ü–û–¢–†–ï–ë–ò–¢–ï–õ–ò =============
  
  /**
   * –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
   */
  export const adminCreateUser = async (adminEmail, newUserData) => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ admin –∏–º–∞ –ø—Ä–∞–≤–∞
      const adminProfile = await getUserProfile(adminEmail);
      if (!adminProfile.success || !hasPermission(adminProfile.data, 'manage_users')) {
        return { success: false, error: '–ù—è–º–∞ –ø—Ä–∞–≤–∞ –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏' };
      }

      const { email, password, displayName, role, courses } = newUserData;
      
      // –í–∞–ª–∏–¥–∞—Ü–∏–∏
      if (!email || !password) {
        return { success: false, error: 'Email –∏ –ø–∞—Ä–æ–ª–∞ —Å–∞ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏' };
      }
      
      if (!isValidRole(role)) {
        return { success: false, error: '–ù–µ–≤–∞–ª–∏–¥–Ω–∞ —Ä–æ–ª—è' };
      }
      
      // –°—ä–∑–¥–∞–≤–∞–º–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è
      const result = await createNewUser(email, password, {
        displayName: displayName || getDisplayNameFromEmail(email),
        role: role || ROLES.STUDENT,
        courses: courses || ROLE_DEFINITIONS[role || ROLES.STUDENT].defaultCourses
      });
      
      if (result.success) {
        console.log(`üë®‚Äçüíº Admin ${adminEmail} —Å—ä–∑–¥–∞–¥–µ –Ω–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: ${email}`);
      }
      
      return result;
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –æ—Ç –∞–¥–º–∏–Ω:', error);
      return { success: false, error: error.message };
    }
  };

  // ============= –û–°–¢–ê–ù–ê–õ–ò–¢–ï –§–£–ù–ö–¶–ò–ò (–ù–ï–ü–†–û–ú–ï–ù–ï–ù–ò) =============
  
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –ø—Ä–∏ –ø—ä—Ä–≤–æ –≤–ª–∏–∑–∞–Ω–µ
   */
  export const initializeUser = async (userEmail, initialData = {}) => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
      const existingProfile = await getUserProfile(userEmail);
      
      if (!existingProfile.success) {
        // –°—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤ –ø—Ä–æ—Ñ–∏–ª –∞–∫–æ –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ (–Ω–æ –Ω–µ –∏ –≤ Auth - —Ç–æ–π –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞)
        const defaultData = {
          displayName: initialData.displayName || getDisplayNameFromEmail(userEmail),
          role: initialData.role || ROLES.STUDENT,
          courses: initialData.courses || ROLE_DEFINITIONS[ROLES.STUDENT].defaultCourses,
          ...initialData
        };
        
        await createUserProfile(userEmail, defaultData);
        console.log('‚úÖ –ù–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∏ –ø—Ä–æ—Ñ–∏–ª —Å—ä–∑–¥–∞–¥–µ–Ω:', userEmail);
      }
      
      // –ó–∞–ø–æ—á–≤–∞–º–µ –Ω–æ–≤–∞ —Å–µ—Å–∏—è
      await startUserSession(userEmail);
      
      // –û–±–Ω–æ–≤—è–≤–∞–º–µ –ø–æ—Å–ª–µ–¥–µ–Ω –≤—Ö–æ–¥
      await updateLastLogin(userEmail);
      
      return { success: true };
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª:', error);
      return { success: false, error: error.message };
    }
  };
  
  /**
   * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø—ä–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
   */
  export const getFullUserProfile = async (userEmail) => {
    try {
      const profile = await getUserProfile(userEmail);
      if (!profile.success) {
        return profile;
      }

      const roleInfo = ROLE_DEFINITIONS[profile.data.role] || ROLE_DEFINITIONS[ROLES.GUEST];
      
      return {
        success: true,
        data: {
          ...profile.data,
          roleInfo
        }
      };
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª:', error);
      return { success: false, error: error.message };
    }
  };
  
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –∏–º–∞ –¥–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å
   */
  export const hasAccessToCourse = (userProfile, courseId) => {
    if (!userProfile || !userProfile.permissions) {
      return false;
    }
    return userProfile.permissions.courses.includes(courseId);
  };
  
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞
   */
  export const hasPermission = (userProfile, permission) => {
    if (!userProfile || !userProfile.role) {
      return false;
    }
    
    const roleInfo = ROLE_DEFINITIONS[userProfile.role];
    return roleInfo && roleInfo.permissions.includes(permission);
  };
  
  // ============= –£–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê –ö–£–†–°–û–í–ï =============
  
  /**
   * –ó–∞–ø–∏—Å–≤–∞–Ω–µ –≤ –∫—É—Ä—Å
   */
  export const enrollUserInCourse = async (userEmail, courseId, totalVideos) => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –∏–º–∞ –¥–æ—Å—Ç—ä–ø
      const profile = await getUserProfile(userEmail);
      if (!profile.success) {
        return { success: false, error: '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞' };
      }

      if (!hasAccessToCourse(profile.data, courseId)) {
        return { success: false, error: '–ù—è–º–∞ –¥–æ—Å—Ç—ä–ø –¥–æ —Ç–æ–∑–∏ –∫—É—Ä—Å' };
      }

      // –ó–∞–ø–∏—Å–≤–∞–º–µ –≤ –∫—É—Ä—Å–∞
      const result = await enrollInCourse(userEmail, courseId, totalVideos);
      
      if (result.success) {
        console.log(`‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${userEmail} –∑–∞–ø–∏—Å–∞–Ω –≤ –∫—É—Ä—Å ${courseId}`);
      }
      
      return result;
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–≤–∞–Ω–µ –≤ –∫—É—Ä—Å:', error);
      return { success: false, error: error.message };
    }
  };
  
  /**
   * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–µ–Ω –∫—É—Ä—Å
   */
  export const getCourseProgress = async (userEmail, courseId) => {
    try {
      return await getFirestoreCourseProgress(userEmail, courseId);
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å –ø–æ –∫—É—Ä—Å:', error);
      return { success: false, error: error.message };
    }
  };
  
  /**
   * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å –ø–æ –≤—Å–∏—á–∫–∏ –∫—É—Ä—Å–æ–≤–µ
   */
  export const getAllCourseProgress = async (userEmail) => {
    try {
      const stats = await getActivityStats(userEmail);
      if (!stats.success) {
        return stats;
      }

      const courseProgress = stats.data.courseProgress.reduce((acc, progress) => {
        const courseId = progress.courseId;
        acc[courseId] = progress;
        return acc;
      }, {});

      return { success: true, data: courseProgress };
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å:', error);
      return { success: false, error: error.message };
    }
  };
  
  // ============= –£–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê –í–ò–î–ï–ê =============
  
  /**
   * –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ
   */
  export const startVideo = async (userEmail, courseId, videoId) => {
    try {
      const result = await recordVideoWatch(userEmail, courseId, videoId);
      
      if (result.success) {
        console.log(`üìπ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${userEmail} –∑–∞–ø–æ—á–Ω–∞ –≤–∏–¥–µ–æ ${videoId} –æ—Ç –∫—É—Ä—Å ${courseId}`);
        
        // –î–æ–±–∞–≤—è–º–µ –≤–∏–¥–µ–æ—Ç–æ –≤ —Ç–µ–∫—É—â–∞—Ç–∞ —Å–µ—Å–∏—è
        const sessionId = localStorage.getItem('currentSessionId');
        if (sessionId) {
          // –¢—É–∫ –º–æ–∂–µ–º –¥–∞ –¥–æ–±–∞–≤–∏–º –ª–æ–≥–∏–∫–∞ –∑–∞ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Å–µ—Å–∏—è—Ç–∞
        }
      }
      
      return result;
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ:', error);
      return { success: false, error: error.message };
    }
  };
  
  /**
   * –ó–∞–≤—ä—Ä—à–≤–∞–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ
   */
  export const completeVideo = async (userEmail, courseId, videoId) => {
    try {
      const result = await markVideoAsCompleted(userEmail, courseId, videoId);
      
      if (result.success) {
        console.log(`‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${userEmail} –∑–∞–≤—ä—Ä—à–∏ –≤–∏–¥–µ–æ ${videoId} –æ—Ç –∫—É—Ä—Å ${courseId}`);
      }
      
      return result;
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–≤—ä—Ä—à–≤–∞–Ω–µ –Ω–∞ –≤–∏–¥–µ–æ:', error);
      return { success: false, error: error.message };
    }
  };
  
  /**
   * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –∑–∞–≤—ä—Ä—à–µ–Ω–∏ –≤–∏–¥–µ–∞ –∑–∞ –∫—É—Ä—Å
   */
  export const getUserCompletedVideos = async (userEmail, courseId) => {
    try {
      return await getCompletedVideos(userEmail, courseId);
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –∑–∞–≤—ä—Ä—à–µ–Ω–∏ –≤–∏–¥–µ–∞:', error);
      return { success: false, error: error.message };
    }
  };
  
  // ============= –°–ï–°–ò–ò =============
  
  /**
   * –ü—Ä–∏–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∞ —Å–µ—Å–∏—è
   */
  export const logoutUser = async (userEmail) => {
    try {
      await endUserSession(userEmail);
      console.log(`üëã –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${userEmail} —Å–µ –∏–∑–ª–æ–≥–Ω–∞`);
      return { success: true };
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ª–∏–∑–∞–Ω–µ:', error);
      return { success: false, error: error.message };
    }
  };
  
  // ============= –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–ò –§–£–ù–ö–¶–ò–ò =============
  
  /**
   * –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –¥–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å (—Å–∞–º–æ –∑–∞ –∞–¥–º–∏–Ω–∏)
   */
  export const addCourseAccessToUser = async (adminEmail, targetUserEmail, courseId) => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ admin –∏–º–∞ –ø—Ä–∞–≤–∞
      const adminProfile = await getUserProfile(adminEmail);
      if (!adminProfile.success || !hasPermission(adminProfile.data, 'manage_users')) {
        return { success: false, error: '–ù—è–º–∞ –ø—Ä–∞–≤–∞ –∑–∞ —Ç–∞–∑–∏ –æ–ø–µ—Ä–∞—Ü–∏—è' };
      }

      const result = await grantCourseAccess(targetUserEmail, courseId);
      
      if (result.success) {
        console.log(`‚úÖ Admin ${adminEmail} –¥–∞–¥–µ –¥–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å ${courseId} –Ω–∞ ${targetUserEmail}`);
      }
      
      return result;
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –¥–æ—Å—Ç—ä–ø:', error);
      return { success: false, error: error.message };
    }
  };
  
  /**
   * –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ –¥–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å (—Å–∞–º–æ –∑–∞ –∞–¥–º–∏–Ω–∏)
   */
  export const removeCourseAccessFromUser = async (adminEmail, targetUserEmail, courseId) => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ admin –∏–º–∞ –ø—Ä–∞–≤–∞
      const adminProfile = await getUserProfile(adminEmail);
      if (!adminProfile.success || !hasPermission(adminProfile.data, 'manage_users')) {
        return { success: false, error: '–ù—è–º–∞ –ø—Ä–∞–≤–∞ –∑–∞ —Ç–∞–∑–∏ –æ–ø–µ—Ä–∞—Ü–∏—è' };
      }

      const result = await revokeCourseAccess(targetUserEmail, courseId);
      
      if (result.success) {
        console.log(`‚ùå Admin ${adminEmail} –ø—Ä–µ–º–∞—Ö–Ω–∞ –¥–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å ${courseId} –æ—Ç ${targetUserEmail}`);
      }
      
      return result;
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ –¥–æ—Å—Ç—ä–ø:', error);
      return { success: false, error: error.message };
    }
  };
  
  /**
   * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ (—Å–∞–º–æ –∑–∞ –∞–¥–º–∏–Ω–∏)
   */
  export const getAdminUsersList = async (adminEmail) => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ admin –∏–º–∞ –ø—Ä–∞–≤–∞
      const adminProfile = await getUserProfile(adminEmail);
      if (!adminProfile.success || !hasPermission(adminProfile.data, 'view_analytics')) {
        return { success: false, error: '–ù—è–º–∞ –ø—Ä–∞–≤–∞ –∑–∞ —Ç–∞–∑–∏ –æ–ø–µ—Ä–∞—Ü–∏—è' };
      }

      return await getAllUsers();
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏:', error);
      return { success: false, error: error.message };
    }
  };
  
  /**
   * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ—Ç–∞–π–ª–Ω–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
   */
  export const getUserDetailedStats = async (userEmail, requestingUserEmail) => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –ø—Ä–∞–≤–∞ - –∏–ª–∏ —Å—ä—â–∏—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –∏–ª–∏ –∞–¥–º–∏–Ω
      if (userEmail !== requestingUserEmail) {
        const adminProfile = await getUserProfile(requestingUserEmail);
        if (!adminProfile.success || !hasPermission(adminProfile.data, 'view_analytics')) {
          return { success: false, error: '–ù—è–º–∞ –ø—Ä–∞–≤–∞ –∑–∞ —Ç–∞–∑–∏ –æ–ø–µ—Ä–∞—Ü–∏—è' };
        }
      }

      const stats = await getActivityStats(userEmail);
      
      if (stats.success) {
        // –î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏—Ç–µ
        const processedStats = {
          ...stats.data,
          summary: {
            totalTimeSpent: stats.data.sessions.reduce((acc, session) => acc + (session.duration || 0), 0),
            averageSessionTime: stats.data.sessions.length > 0 
              ? stats.data.sessions.reduce((acc, session) => acc + (session.duration || 0), 0) / stats.data.sessions.length 
              : 0,
            completionRate: stats.data.videoProgress.length > 0 
              ? (stats.data.videoProgress.filter(v => v.isCompleted).length / stats.data.videoProgress.length) * 100 
              : 0,
            coursesCompleted: stats.data.courseProgress.filter(c => c.completedAt).length,
            mostWatchedCourse: getMostWatchedCourse(stats.data.videoProgress),
            lastActivity: getLastActivity(stats.data.sessions, stats.data.videoProgress)
          }
        };
        
        return { success: true, data: processedStats };
      }
      
      return stats;
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      return { success: false, error: error.message };
    }
  };
  
  // ============= –ü–û–ú–û–©–ù–ò –§–£–ù–ö–¶–ò–ò =============
  
  /**
   * –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ display name –æ—Ç email
   */
  const getDisplayNameFromEmail = (email) => {
    return email.split('@')[0].charAt(0).toUpperCase() + email.split('@')[0].slice(1);
  };
  
  /**
   * –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –Ω–∞–π-–≥–ª–µ–¥–∞–Ω–∏—è –∫—É—Ä—Å
   */
  const getMostWatchedCourse = (videoProgress) => {
    if (!videoProgress.length) return null;
    
    const courseCounts = videoProgress.reduce((acc, video) => {
      acc[video.courseId] = (acc[video.courseId] || 0) + 1;
      return acc;
    }, {});
    
    return Object.keys(courseCounts).reduce((a, b) => 
      courseCounts[a] > courseCounts[b] ? a : b
    );
  };
  
  /**
   * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç
   */
  const getLastActivity = (sessions, videoProgress) => {
    const allActivities = [
      ...sessions.map(s => ({ type: 'session', date: s.loginAt })),
      ...videoProgress.map(v => ({ type: 'video', date: v.watchedAt }))
    ];
    
    if (!allActivities.length) return null;
    
    return allActivities.reduce((latest, current) => 
      current.date > latest.date ? current : latest
    );
  };
  
  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ —Ä–æ–ª—è
   */
  export const isValidRole = (role) => {
    return Object.values(ROLES).includes(role);
  };
  
  /**
   * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —Ä–æ–ª—è
   */
  export const getRoleInfo = (role) => {
    return ROLE_DEFINITIONS[role] || ROLE_DEFINITIONS[ROLES.GUEST];
  };

  // ============= –°–¢–ê–†–ê –§–£–ù–ö–¶–ò–Ø –ó–ê –°–™–í–ú–ï–°–¢–ò–ú–û–°–¢ =============
  
  /**
   * –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ —Å–∞–º–æ –≤—ä–≤ Firestore (—Å—Ç–∞—Ä–∞ –≤–µ—Ä—Å–∏—è)
   */
  export const createDemoUsers = async () => {
    console.log('‚ö†Ô∏è –í–ê–ñ–ù–û: –ò–∑–ø–æ–ª–∑–≤–∞—Ç–µ —Å—Ç–∞—Ä–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è createDemoUsers()');
    console.log('üîÑ –ü—Ä–µ–ø–æ—Ä—ä—á–≤–∞–º–µ –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ createDemoUsersWithAuth() –∑–∞ –ø—ä–ª–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ');
    
    const demoUsers = [
      {
        email: 'admin@iru.bg',
        displayName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        role: ROLES.ADMIN,
        courses: ['basic', 'intermediate', 'advanced', 'expert']
      },
      {
        email: 'teacher@iru.bg',
        displayName: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª',
        role: ROLES.TEACHER,
        courses: ['basic', 'intermediate', 'advanced']
      },
      {
        email: 'student@iru.bg',
        displayName: '–°—Ç—É–¥–µ–Ω—Ç',
        role: ROLES.STUDENT,
        courses: ['basic']
      },
      {
        email: 'student2@iru.bg',
        displayName: '–ù–∞–ø—Ä–µ–¥–Ω–∞–ª —Å—Ç—É–¥–µ–Ω—Ç',
        role: ROLES.STUDENT,
        courses: ['basic', 'intermediate']
      }
    ];

    console.log('üöÄ –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ —Å–∞–º–æ –≤—ä–≤ Firestore...');
    
    for (const user of demoUsers) {
      try {
        const result = await createUserProfile(user.email, user);
        if (result.success) {
          console.log(`‚úÖ –°—ä–∑–¥–∞–¥–µ–Ω –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –≤—ä–≤ Firestore: ${user.email}`);
        } else {
          console.log(`‚ö†Ô∏è –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${user.email} –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –∏–ª–∏ –∏–º–∞ –≥—Ä–µ—à–∫–∞`);
        }
      } catch (error) {
        console.error(`‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ ${user.email}:`, error);
      }
    }
    
    console.log('\n‚ö†Ô∏è –ó–ê–ë–ï–õ–ï–ñ–ö–ê: –¢–µ–∑–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ —Å–∞ —Å—ä–∑–¥–∞–¥–µ–Ω–∏ —Å–∞–º–æ –≤—ä–≤ Firestore!');
    console.log('üîê –¢—Ä—è–±–≤–∞ —Ä—ä—á–Ω–æ –¥–∞ –≥–∏ —Å—ä–∑–¥–∞–¥–µ—Ç–µ –≤ Firebase Authentication –∏–ª–∏');
    console.log('üîÑ –ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ createDemoUsersWithAuth() –∑–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ');
    
    console.log('‚úÖ –î–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏—Ç–µ —Å–∞ –≥–æ—Ç–æ–≤–∏!');
  };
  
  // –ï–∫—Å–ø–æ—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏
  export default {
    // –ù–æ–≤–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ —Å Auth
    createNewUser,
    createDemoUsersWithAuth,
    adminCreateUser,
    
    // –û—Å–Ω–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏
    initializeUser,
    getFullUserProfile,
    hasAccessToCourse,
    hasPermission,
    logoutUser,
    
    // –ö—É—Ä—Å–æ–≤–µ
    enrollUserInCourse,
    getCourseProgress,
    getAllCourseProgress,
    
    // –í–∏–¥–µ–∞
    startVideo,
    completeVideo,
    getUserCompletedVideos,
    
    // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∏
    addCourseAccessToUser,
    removeCourseAccessFromUser,
    getAdminUsersList,
    getUserDetailedStats,
    
    // –î–µ–º–æ (–¥–≤–µ—Ç–µ –≤–µ—Ä—Å–∏–∏)
    createDemoUsers, // –°—Ç–∞—Ä–∞ –≤–µ—Ä—Å–∏—è - —Å–∞–º–æ Firestore
    createDemoUsersWithAuth, // –ù–æ–≤–∞ –≤–µ—Ä—Å–∏—è - Auth + Firestore
    
    // –ü–æ–º–æ—â–Ω–∏
    getRoleInfo,
    isValidRole,
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
    ROLES,
    ROLE_DEFINITIONS
  };