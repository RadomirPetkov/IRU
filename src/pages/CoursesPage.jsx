// src/pages/CoursesPage.jsx - –í–µ—Ä—Å–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –ª–∏–ø—Å–≤–∞—â–∏ –∫—É—Ä—Å–æ–≤–µ
import React, { useState, useEffect } from 'react';
import { useAuth } from '../contexts/AuthContext';
import { Link } from 'react-router-dom';
import Login from '../components/Login';
import { 
  Lock, 
  ArrowLeft, 
  Play,
  Clock,
  CheckCircle,
  XCircle,
  BookOpen,
  Shield,
  RefreshCw,
  AlertCircle,
  Settings,
  Database,
  WifiOff
} from 'lucide-react';
import { courses, reloadCourses, checkForUpdates } from '../data/coursesData';

const CoursesPage = () => {
  const { isAuthenticated, user, userProfile, hasAccessToCourse, hasPermission } = useAuth();
  const [showLogin, setShowLogin] = useState(false);
  const [coursesData, setCoursesData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [refreshing, setRefreshing] = useState(false);
  const [error, setError] = useState(null);
  const [errorType, setErrorType] = useState(null); // 'network', 'permission', 'empty', 'unknown'
  const [lastCheck, setLastCheck] = useState(null);

  useEffect(() => {
    loadCourses();
    
    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ –≤—Å–µ–∫–∏ 5 –º–∏–Ω—É—Ç–∏
    const interval = setInterval(checkForCoursesUpdates, 5 * 60 * 1000);
    
    return () => clearInterval(interval);
  }, []);

  const loadCourses = async () => {
    setLoading(true);
    setError(null);
    setErrorType(null);
    
    try {
      console.log('üìö –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ...');
      const coursesResult = await courses();
      
      if (Array.isArray(coursesResult)) {
        if (coursesResult.length === 0) {
          console.log('‚ö†Ô∏è –ù—è–º–∞ –Ω–∞–ª–∏—á–Ω–∏ –∫—É—Ä—Å–æ–≤–µ');
          setErrorType('empty');
          setError('–í –º–æ–º–µ–Ω—Ç–∞ –Ω—è–º–∞ –∞–∫—Ç–∏–≤–Ω–∏ –∫—É—Ä—Å–æ–≤–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞');
        } else {
          console.log(`‚úÖ –ó–∞—Ä–µ–¥–µ–Ω–∏ ${coursesResult.length} –∫—É—Ä—Å–∞`);
        }
        setCoursesData(coursesResult);
      } else {
        console.warn('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–∞ –∫—É—Ä—Å–æ–≤–µ');
        setCoursesData([]);
        setErrorType('unknown');
        setError('–ü–æ–ª—É—á–µ–Ω–∏ —Å–∞ –¥–∞–Ω–Ω–∏ –≤ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω —Ñ–æ—Ä–º–∞—Ç');
      }
      
      setLastCheck(new Date());
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ:', error);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–º–µ —Ç–∏–ø–∞ –Ω–∞ –≥—Ä–µ—à–∫–∞—Ç–∞
      if (error.code === 'permission-denied') {
        setErrorType('permission');
        setError('–ù—è–º–∞—Ç–µ –ø—Ä–∞–≤–∞ –∑–∞ –¥–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å–æ–≤–µ—Ç–µ');
      } else if (error.code === 'unavailable' || error.message.includes('network')) {
        setErrorType('network');
        setError('–ü—Ä–æ–±–ª–µ–º —Å –º—Ä–µ–∂–æ–≤–∞—Ç–∞ –≤—Ä—ä–∑–∫–∞. –ú–æ–ª—è, –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å–∏');
      } else {
        setErrorType('unknown');
        setError('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ');
      }
      
      setCoursesData([]);
    } finally {
      setLoading(false);
    }
  };

  const handleRefreshCourses = async () => {
    setRefreshing(true);
    setError(null);
    setErrorType(null);
    
    try {
      console.log('üîÑ –†—ä—á–Ω–æ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ...');
      const refreshedCourses = await reloadCourses();
      
      if (Array.isArray(refreshedCourses)) {
        if (refreshedCourses.length === 0) {
          setErrorType('empty');
          setError('–í –º–æ–º–µ–Ω—Ç–∞ –Ω—è–º–∞ –∞–∫—Ç–∏–≤–Ω–∏ –∫—É—Ä—Å–æ–≤–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞');
        } else {
          console.log(`‚úÖ –ü—Ä–µ–∑–∞—Ä–µ–¥–µ–Ω–∏ ${refreshedCourses.length} –∫—É—Ä—Å–∞`);
        }
        setCoursesData(refreshedCourses);
        setLastCheck(new Date());
      }
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ:', error);
      
      if (error.code === 'permission-denied') {
        setErrorType('permission');
        setError('–ù—è–º–∞—Ç–µ –ø—Ä–∞–≤–∞ –∑–∞ –¥–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å–æ–≤–µ—Ç–µ');
      } else if (error.code === 'unavailable' || error.message.includes('network')) {
        setErrorType('network');
        setError('–ü—Ä–æ–±–ª–µ–º —Å –º—Ä–µ–∂–æ–≤–∞—Ç–∞ –≤—Ä—ä–∑–∫–∞');
      } else {
        setErrorType('unknown');
        setError('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ');
      }
    } finally {
      setRefreshing(false);
    }
  };

  const checkForCoursesUpdates = async () => {
    try {
      const updateCheck = await checkForUpdates();
      if (updateCheck.hasUpdates) {
        console.log('üîî –û—Ç–∫—Ä–∏—Ç–∏ —Å–∞ –Ω–æ–≤–∏ –∫—É—Ä—Å–æ–≤–µ, –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–º–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ...');
        await loadCourses();
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
    }
  };

  const handleLoginSuccess = () => {
    setShowLogin(false);
  };

  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –∞–¥–º–∏–Ω
  const isAdmin = isAuthenticated && hasPermission && hasPermission('view_analytics');

  // Render –∑–∞ –Ω–µ–∞–≤—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–∞–Ω –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
  if (!isAuthenticated) {
    return (
      <div className="min-h-screen bg-gray-50 pt-20">
        <div className="bg-white shadow-sm border-b">
          <div className="container mx-auto px-4 max-w-[1500px] mt-24 py-4">
            <Link 
              to="/" 
              className="flex items-center text-gray-600 hover:text-blue-600 transition-colors"
            >
              <ArrowLeft size={20} className="mr-2" />
              –û–±—Ä–∞—Ç–Ω–æ –∫—ä–º –Ω–∞—á–∞–ª–æ—Ç–æ
            </Link>
          </div>
        </div>

        <div className="py-16">
          <div className="container mx-auto px-4 max-w-[1500px]">
            <div className="text-center mb-12">
              <h1 className="text-4xl md:text-5xl font-bold text-gray-800 mb-6">
                –û–±—É—á–∏—Ç–µ–ª–Ω–∏ –∫—É—Ä—Å–æ–≤–µ
              </h1>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                –ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ –∫—É—Ä—Å–æ–≤–µ –∑–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞ —Ü–∏—Ñ—Ä–æ–≤–∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
              </p>
            </div>

            <div className="max-w-3xl mx-auto">
              <div className="bg-white rounded-xl shadow-lg overflow-hidden border border-gray-200">
                <div className="bg-gradient-to-r from-purple-600 to-blue-700 px-6 py-12 text-center">
                  <div className="bg-white bg-opacity-20 rounded-full w-24 h-24 flex items-center justify-center mx-auto mb-6">
                    <Lock className="text-white" size={48} />
                  </div>
                  <h2 className="text-3xl font-bold text-white mb-4">
                    –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
                  </h2>
                  <p className="text-blue-100 text-lg">
                    –í–ª–µ–∑—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞ –∑–∞ –¥–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å–æ–≤–µ—Ç–µ
                  </p>
                </div>

                <div className="p-8 text-center">
                  <button
                    onClick={() => setShowLogin(true)}
                    className="bg-gradient-to-r from-purple-600 to-blue-700 text-white px-8 py-4 rounded-lg font-semibold hover:from-purple-700 hover:to-blue-800 transition-all duration-200 transform hover:scale-105 shadow-lg text-lg"
                  >
                    –í–ª–∏–∑–∞–Ω–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞
                  </button>
                </div>
              </div>
            </div>

            {showLogin && (
              <Login 
                onClose={() => setShowLogin(false)}
                onLoginSuccess={handleLoginSuccess}
              />
            )}
          </div>
        </div>
      </div>
    );
  }

  // Render –∑–∞ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 pt-20 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-500 mx-auto mb-6"></div>
          <h3 className="text-xl font-semibold text-gray-800 mb-2">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ</h3>
          <p className="text-gray-600">–ú–æ–ª—è –∏–∑—á–∞–∫–∞–π—Ç–µ, –¥–æ–∫–∞—Ç–æ –∑–∞—Ä–µ–¥–∏–º –Ω–∞–ª–∏—á–Ω–∏—Ç–µ –∫—É—Ä—Å–æ–≤–µ...</p>
        </div>
      </div>
    );
  }

  // –§–∏–ª—Ç—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ—Ç–µ
  const accessibleCourses = coursesData.filter(course => hasAccessToCourse(course.id));
  const lockedCourses = coursesData.filter(course => !hasAccessToCourse(course.id));

  // Render –∑–∞ –≥—Ä–µ—à–∫–∞ –∏–ª–∏ –ª–∏–ø—Å–∞ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ
  if (errorType || coursesData.length === 0) {
    return (
      <div className="min-h-screen bg-gray-50 pt-20">
        <div className="bg-white shadow-sm border-b">
          <div className="container mx-auto px-4 max-w-[1500px] py-4 mt-20">
            <div className="flex items-center justify-between">
              <Link 
                to="/" 
                className="flex items-center text-gray-600 hover:text-blue-600 transition-colors"
              >
                <ArrowLeft size={20} className="mr-2" />
                –û–±—Ä–∞—Ç–Ω–æ –∫—ä–º –Ω–∞—á–∞–ª–æ—Ç–æ
              </Link>
              
              <div className="flex items-center space-x-4">
                {isAdmin && (
                  <Link
                    to="/admin"
                    className="flex items-center bg-gradient-to-r from-purple-600 to-indigo-600 text-white px-3 py-1.5 rounded-lg hover:from-purple-700 hover:to-indigo-700 transition-all duration-200 text-sm font-medium shadow-md"
                  >
                    <Settings size={14} className="mr-1" />
                    –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª
                  </Link>
                )}
              </div>
            </div>
          </div>
        </div>

        <div className="py-16">
          <div className="container mx-auto px-4 max-w-[1500px]">
            <div className="max-w-2xl mx-auto">
              <div className="bg-white rounded-xl shadow-lg p-12 text-center">
                {/* –ò–∫–æ–Ω–∞ —Å–ø–æ—Ä–µ–¥ —Ç–∏–ø–∞ –≥—Ä–µ—à–∫–∞ */}
                {errorType === 'empty' && (
                  <Database className="text-gray-400 mx-auto mb-6" size={80} />
                )}
                {errorType === 'network' && (
                  <WifiOff className="text-orange-400 mx-auto mb-6" size={80} />
                )}
                {errorType === 'permission' && (
                  <Shield className="text-red-400 mx-auto mb-6" size={80} />
                )}
                {(errorType === 'unknown' || !errorType) && (
                  <AlertCircle className="text-yellow-400 mx-auto mb-6" size={80} />
                )}

                {/* –ó–∞–≥–ª–∞–≤–∏–µ —Å–ø–æ—Ä–µ–¥ —Ç–∏–ø–∞ –≥—Ä–µ—à–∫–∞ */}
                <h2 className="text-3xl font-bold text-gray-800 mb-4">
                  {errorType === 'empty' && '–ù—è–º–∞ –∞–∫—Ç–∏–≤–Ω–∏ –∫—É—Ä—Å–æ–≤–µ'}
                  {errorType === 'network' && '–ü—Ä–æ–±–ª–µ–º —Å –≤—Ä—ä–∑–∫–∞—Ç–∞'}
                  {errorType === 'permission' && '–ù—è–º–∞ –¥–æ—Å—Ç—ä–ø'}
                  {(errorType === 'unknown' || !errorType) && '–í—ä–∑–Ω–∏–∫–Ω–∞ –ø—Ä–æ–±–ª–µ–º'}
                </h2>

                {/* –°—ä–æ–±—â–µ–Ω–∏–µ */}
                <p className="text-gray-600 text-lg mb-8">
                  {error || '–í –º–æ–º–µ–Ω—Ç–∞ –Ω—è–º–∞ –∞–∫—Ç–∏–≤–Ω–∏ –∫—É—Ä—Å–æ–≤–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞'}
                </p>

                {/* –î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="bg-blue-50 rounded-lg p-4 mb-8 text-left">
                  <h3 className="font-semibold text-blue-800 mb-2">–í—ä–∑–º–æ–∂–Ω–∏ –ø—Ä–∏—á–∏–Ω–∏:</h3>
                  <ul className="text-sm text-blue-700 space-y-1">
                    {errorType === 'empty' && (
                      <>
                        <li>‚Ä¢ –í—Å–µ –æ—â–µ –Ω–µ —Å–∞ –¥–æ–±–∞–≤–µ–Ω–∏ –∫—É—Ä—Å–æ–≤–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞</li>
                        <li>‚Ä¢ –ö—É—Ä—Å–æ–≤–µ—Ç–µ —Å–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–∏</li>
                        <li>‚Ä¢ –ü–ª–∞–Ω–∏—Ä–∞–Ω–æ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –Ω–æ–≤–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ</li>
                      </>
                    )}
                    {errorType === 'network' && (
                      <>
                        <li>‚Ä¢ –ù—è–º–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤—Ä—ä–∑–∫–∞</li>
                        <li>‚Ä¢ Firestore –µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—ä–ø–µ–Ω</li>
                        <li>‚Ä¢ –ü—Ä–æ–±–ª–µ–º —Å—ä—Å —Å—ä—Ä–≤—ä—Ä–∞</li>
                      </>
                    )}
                    {errorType === 'permission' && (
                      <>
                        <li>‚Ä¢ –ù—è–º–∞—Ç–µ –ø—Ä–∞–≤–∞ –∑–∞ –ø—Ä–µ–≥–ª–µ–¥ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ</li>
                        <li>‚Ä¢ Firestore –ø—Ä–∞–≤–∏–ª–∞—Ç–∞ –±–ª–æ–∫–∏—Ä–∞—Ç –¥–æ—Å—Ç—ä–ø–∞</li>
                        <li>‚Ä¢ –°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</li>
                      </>
                    )}
                    {(errorType === 'unknown' || !errorType) && (
                      <>
                        <li>‚Ä¢ –í—Ä–µ–º–µ–Ω–µ–Ω –ø—Ä–æ–±–ª–µ–º —Å—ä—Å —Å–∏—Å—Ç–µ–º–∞—Ç–∞</li>
                        <li>‚Ä¢ –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏</li>
                        <li>‚Ä¢ –û–ø–∏—Ç–∞–π—Ç–µ –¥–∞ –ø—Ä–µ–∑–∞—Ä–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞</li>
                      </>
                    )}
                  </ul>
                </div>

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è */}
                <div className="bg-gray-50 rounded-lg p-4 mb-8">
                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div className="text-left">
                      <span className="text-gray-600">–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª:</span>
                      <p className="font-medium text-gray-800">{userProfile?.displayName || '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}</p>
                    </div>
                    <div className="text-left">
                      <span className="text-gray-600">–†–æ–ª—è:</span>
                      <p className="font-medium text-gray-800">{userProfile?.roleInfo?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞'}</p>
                    </div>
                    <div className="text-left">
                      <span className="text-gray-600">Email:</span>
                      <p className="font-medium text-gray-800 text-xs">{user?.email || 'N/A'}</p>
                    </div>
                    <div className="text-left">
                      <span className="text-gray-600">–ü–æ—Å–ª–µ–¥–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞:</span>
                      <p className="font-medium text-gray-800 text-xs">
                        {lastCheck ? lastCheck.toLocaleTimeString('bg-BG') : 'N/A'}
                      </p>
                    </div>
                  </div>
                </div>

                {/* –ë—É—Ç–æ–Ω–∏ –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ */}
                <div className="flex flex-col sm:flex-row gap-4 justify-center">
                  <button
                    onClick={handleRefreshCourses}
                    disabled={refreshing}
                    className="flex items-center justify-center bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-medium shadow-md"
                  >
                    <RefreshCw size={20} className={`mr-2 ${refreshing ? 'animate-spin' : ''}`} />
                    {refreshing ? '–ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞...' : '–û–ø–∏—Ç–∞–π –æ—Ç–Ω–æ–≤–æ'}
                  </button>

                  <Link
                    to="/"
                    className="flex items-center justify-center bg-gray-500 text-white px-6 py-3 rounded-lg hover:bg-gray-600 transition-all duration-200 font-medium shadow-md"
                  >
                    <ArrowLeft size={20} className="mr-2" />
                    –ö—ä–º –Ω–∞—á–∞–ª–Ω–∞—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                  </Link>

                  {isAdmin && (
                    <Link
                      to="/admin"
                      className="flex items-center justify-center bg-purple-500 text-white px-6 py-3 rounded-lg hover:bg-purple-600 transition-all duration-200 font-medium shadow-md"
                    >
                      <Settings size={20} className="mr-2" />
                      –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª
                    </Link>
                  )}
                </div>

                {/* –ü–æ–º–æ—â–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                {errorType !== 'permission' && (
                  <div className="mt-8 pt-8 border-t border-gray-200">
                    <p className="text-sm text-gray-500">
                      –ê–∫–æ –ø—Ä–æ–±–ª–µ–º—ä—Ç –ø—Ä–æ–¥—ä–ª–∂–∞–≤–∞, –º–æ–ª—è —Å–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                    </p>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –ù–æ—Ä–º–∞–ª–µ–Ω render —Å –∫—É—Ä—Å–æ–≤–µ
  return (
    <div className="min-h-screen bg-gray-50 pt-20">
      {/* Breadcrumb Navigation */}
      <div className="bg-white shadow-sm border-b">
        <div className="container mx-auto px-4 max-w-[1500px] py-4 mt-20">
          <div className="flex items-center justify-between">
            <Link 
              to="/" 
              className="flex items-center text-gray-600 hover:text-blue-600 transition-colors"
            >
              <ArrowLeft size={20} className="mr-2" />
              –û–±—Ä–∞—Ç–Ω–æ –∫—ä–º –Ω–∞—á–∞–ª–æ—Ç–æ
            </Link>
            
            <div className="flex items-center space-x-4 text-sm text-gray-600">
              <div className="flex items-center">
                <div className={`w-3 h-3 rounded-full mr-2 ${
                  userProfile?.roleInfo?.color?.includes('red') ? 'bg-red-500' :
                  userProfile?.roleInfo?.color?.includes('green') ? 'bg-green-500' :
                  userProfile?.roleInfo?.color?.includes('blue') ? 'bg-blue-500' :
                  'bg-gray-500'
                }`}></div>
                {userProfile?.displayName || '–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...'}
              </div>
              <div className="flex items-center">
                <BookOpen size={16} className="mr-1" />
                {accessibleCourses.length} –æ—Ç {coursesData.length} –∫—É—Ä—Å–∞
              </div>
              <button
                onClick={handleRefreshCourses}
                disabled={refreshing}
                className="flex items-center text-blue-600 hover:text-blue-800 disabled:opacity-50"
                title="–ü—Ä–µ–∑–∞—Ä–µ–¥–∏ –∫—É—Ä—Å–æ–≤–µ"
              >
                <RefreshCw size={16} className={`mr-1 ${refreshing ? 'animate-spin' : ''}`} />
                {refreshing ? '–ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞...' : '–û–±–Ω–æ–≤–∏'}
              </button>
              
              {isAdmin && (
                <Link
                  to="/admin"
                  className="flex items-center bg-gradient-to-r from-purple-600 to-indigo-600 text-white px-3 py-1.5 rounded-lg hover:from-purple-700 hover:to-indigo-700 transition-all duration-200 text-sm font-medium shadow-md"
                  title="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–µ–Ω –ø–∞–Ω–µ–ª"
                >
                  <Settings size={14} className="mr-1" />
                  –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª
                </Link>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Page Header */}
      <div className="bg-gradient-to-r from-purple-600 to-blue-700 text-white py-16">
        <div className="container mx-auto px-4 max-w-[1500px]">
          <div className="text-center">
            <h1 className="text-4xl md:text-5xl font-bold mb-6">
              –û–±—É—á–∏—Ç–µ–ª–Ω–∏ –∫—É—Ä—Å–æ–≤–µ
            </h1>
            <p className="text-xl text-blue-100 max-w-3xl mx-auto mb-8">
              –ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ –∫—É—Ä—Å–æ–≤–µ –∑–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞ –≤–∞—à–∏—Ç–µ —Ü–∏—Ñ—Ä–æ–≤–∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
            </p>
            
            <div className="bg-white bg-opacity-10 rounded-lg p-6 max-w-lg mx-auto">
              <div className="flex items-center justify-center mb-3">
                {userProfile?.roleInfo && (
                  <div className={`px-3 py-1 rounded-full text-sm font-medium ${userProfile.roleInfo.color} bg-white`}>
                    {userProfile.roleInfo.name}
                  </div>
                )}
              </div>
              <p className="text-blue-100 mb-2">
                –î–æ–±—Ä–µ –¥–æ—à–ª–∏, <span className="font-semibold">{userProfile?.displayName || '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª'}</span>
              </p>
              <p className="text-sm text-blue-200">
                –ò–º–∞—Ç–µ –¥–æ—Å—Ç—ä–ø –¥–æ {accessibleCourses.length} –æ—Ç {coursesData.length} –∫—É—Ä—Å–∞
              </p>
              {lastCheck && (
                <p className="text-xs text-blue-300 mt-2">
                  –ü–æ—Å–ª–µ–¥–Ω–æ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ: {lastCheck.toLocaleTimeString('bg-BG')}
                </p>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Courses Grid */}
      <div className="py-16">
        <div className="container mx-auto px-4 max-w-[1500px]">
          
          {/* Accessible Courses */}
          {accessibleCourses.length > 0 && (
            <div className="mb-12">
              <h2 className="text-2xl font-bold text-gray-800 mb-8 flex items-center">
                <CheckCircle className="text-green-500 mr-3" size={28} />
                –î–æ—Å—Ç—ä–ø–Ω–∏ –∫—É—Ä—Å–æ–≤–µ
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                {accessibleCourses.map(course => (
                  <div 
                    key={course.id}
                    className="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:scale-105"
                  >
                    <div className={`bg-gradient-to-r ${course.color} p-6 text-white`}>
                      <div className="flex items-center justify-between mb-4">
                        <div className="text-4xl">{course.icon}</div>
                        <div className="bg-white bg-opacity-20 px-3 py-1 rounded-full text-sm">
                          –ù–∏–≤–æ {course.level}
                        </div>
                      </div>
                      <h3 className="text-xl font-bold mb-2">{course.title}</h3>
                      <p className="text-white text-opacity-90">{course.description}</p>
                    </div>

                    <div className="p-6">
                      <div className="flex items-center justify-between mb-4">
                        <div className="flex items-center text-gray-600">
                          <Play size={16} className="mr-2" />
                          {course.videos?.length || 0} –≤–∏–¥–µ–æ –ª–µ–∫—Ü–∏–∏
                        </div>
                        <div className="flex items-center text-gray-600">
                          <Clock size={16} className="mr-2" />
                          {course.estimatedHours || 1} —á–∞—Å–∞
                        </div>
                      </div>

                      <div className="space-y-2 mb-6">
                        {(course.videos || []).slice(0, 3).map((video, index) => (
                          <div key={video.id || index} className="flex items-center text-sm text-gray-600">
                            <div className="w-6 h-6 bg-gray-100 rounded-full flex items-center justify-center mr-3 text-xs">
                              {index + 1}
                            </div>
                            <span className="flex-1">{video.title}</span>
                            <span className="text-xs">{video.duration || '0:00'}</span>
                          </div>
                        ))}
                        {(course.videos?.length || 0) > 3 && (
                          <div className="text-xs text-gray-500 ml-9">
                            +{(course.videos?.length || 0) - 3} –æ—â–µ –≤–∏–¥–µ–∞
                          </div>
                        )}
                      </div>

                      <Link
                        to={`/course/${course.id}`}
                        className={`w-full bg-gradient-to-r ${course.color} text-white py-3 px-4 rounded-lg font-medium hover:shadow-lg transition-all duration-200 block text-center`}
                      >
                        –ó–∞–ø–æ—á–Ω–∏ –∫—É—Ä—Å–∞
                      </Link>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Locked Courses */}
          {lockedCourses.length > 0 && (
            <div>
              <h2 className="text-2xl font-bold text-gray-800 mb-8 flex items-center">
                <XCircle className="text-red-500 mr-3" size={28} />
                –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏ –∫—É—Ä—Å–æ–≤–µ
              </h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                {lockedCourses.map(course => (
                  <div 
                    key={course.id}
                    className="bg-white rounded-xl shadow-lg overflow-hidden opacity-75"
                  >
                    <div className="bg-gray-400 p-6 text-white relative">
                      <div className="absolute top-4 right-4">
                        <Lock className="text-white" size={24} />
                      </div>
                      <div className="flex items-center justify-between mb-4">
                        <div className="text-4xl opacity-60">{course.icon}</div>
                        <div className="bg-white bg-opacity-20 px-3 py-1 rounded-full text-sm">
                          –ù–∏–≤–æ {course.level}
                        </div>
                      </div>
                      <h3 className="text-xl font-bold mb-2">{course.title}</h3>
                      <p className="text-white text-opacity-90">{course.description}</p>
                    </div>

                    <div className="p-6">
                      <div className="flex items-center justify-between mb-4">
                        <div className="flex items-center text-gray-400">
                          <Shield size={16} className="mr-2" />
                          –û–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–æ—Å—Ç—ä–ø
                        </div>
                        <div className="flex items-center text-gray-400">
                          <Play size={16} className="mr-2" />
                          {course.videos?.length || 0} –≤–∏–¥–µ–∞
                        </div>
                      </div>

                      <div className="bg-gray-50 rounded-lg p-4 text-center">
                        <Lock className="text-gray-400 mx-auto mb-2" size={32} />
                        <p className="text-gray-600 text-sm mb-3">
                          –ù—è–º–∞—Ç–µ –¥–æ—Å—Ç—ä–ø –¥–æ —Ç–æ–∑–∏ –∫—É—Ä—Å
                        </p>
                        <p className="text-xs text-gray-500">
                          –°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞ –¥–æ—Å—Ç—ä–ø
                        </p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* No Access Message */}
          {coursesData.length > 0 && accessibleCourses.length === 0 && (
            <div className="text-center py-12">
              <Shield className="text-gray-400 mx-auto mb-4" size={64} />
              <h3 className="text-xl font-semibold text-gray-800 mb-2">
                –ù—è–º–∞ –¥–æ—Å—Ç—ä–ø–Ω–∏ –∫—É—Ä—Å–æ–≤–µ
              </h3>
              <p className="text-gray-600 mb-4">
                –í–∞—à–∞—Ç–∞ —Ä–æ–ª—è: {userProfile?.roleInfo && (
                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${userProfile.roleInfo.color}`}>
                    {userProfile.roleInfo.name}
                  </span>
                )}
              </p>
              <p className="text-gray-500 text-sm mb-4">
                Email: {user?.email}
              </p>
              <p className="text-gray-500 text-sm mb-6">
                –°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—è–Ω–µ –Ω–∞ –¥–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å–æ–≤–µ
              </p>
              
              <div className="flex items-center justify-center space-x-4">
                <button
                  onClick={handleRefreshCourses}
                  disabled={refreshing}
                  className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 disabled:opacity-50 transition-colors flex items-center"
                >
                  <RefreshCw size={16} className={`mr-2 ${refreshing ? 'animate-spin' : ''}`} />
                  {refreshing ? '–ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞...' : '–ü—Ä–µ–∑–∞—Ä–µ–¥–∏ –¥–∞–Ω–Ω–∏—Ç–µ'}
                </button>
                
                {isAdmin && (
                  <Link
                    to="/admin"
                    className="bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600 transition-colors flex items-center"
                  >
                    <Settings size={16} className="mr-2" />
                    –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª
                  </Link>
                )}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default CoursesPage