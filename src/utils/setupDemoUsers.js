// src/utils/setupDemoUsers.js - –û–±–Ω–æ–≤–µ–Ω —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –≤ Auth
import { createDemoUsersWithAuth, createDemoUsers } from '../services/userService';

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ —Å –∞–≤—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
export const setupDemoWithAuth = async () => {
  console.log('üöÄ –ó–∞–ø–æ—á–≤–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ —Å Authentication...');
  
  try {
    const results = await createDemoUsersWithAuth();
    
    const successCount = results.filter(r => r.success).length;
    
    if (successCount > 0) {
      console.log('\n‚úÖ –î–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏—Ç–µ —Å–∞ —Å—ä–∑–¥–∞–¥–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ –≤ Authentication + Firestore!');
      console.log('\nüéØ –ì–æ—Ç–æ–≤–∏ –∑–∞ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ:');
      
      const successfulUsers = results.filter(r => r.success);
      successfulUsers.forEach(result => {
        console.log(`   ‚úì ${result.email} - –≥–æ—Ç–æ–≤ –∑–∞ –≤–ª–∏–∑–∞–Ω–µ`);
      });
      
      return true;
    } else {
      console.log('\n‚ö†Ô∏è –ù—è–º–∞ —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏');
      return false;
    }
  } catch (error) {
    console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ —Å Auth:', error);
    return false;
  }
};

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ (—Å—Ç–∞—Ä–∞ –≤–µ—Ä—Å–∏—è - —Å–∞–º–æ Firestore)
export const setupDemo = async () => {
  console.log('üöÄ –ó–∞–ø–æ—á–≤–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ (—Å–∞–º–æ Firestore)...');
  console.log('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –¢–∞–∑–∏ —Ñ—É–Ω–∫—Ü–∏—è —Å—ä–∑–¥–∞–≤–∞ –ø—Ä–æ—Ñ–∏–ª–∏ —Å–∞–º–æ –≤—ä–≤ Firestore!');
  console.log('üí° –ó–∞ –ø—ä–ª–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ setupDemoWithAuth()');
  
  try {
    await createDemoUsers();
    console.log('‚úÖ –î–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏—Ç–µ —Å–∞ —Å—ä–∑–¥–∞–¥–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ –≤—ä–≤ Firestore!');
    
    console.log('\nüìã –î–µ–º–æ –∞–∫–∞—É–Ω—Ç–∏ –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ:');
    console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
    console.log('‚îÇ Email               ‚îÇ –ü–∞—Ä–æ–ª–∞          ‚îÇ –†–æ–ª—è & –î–æ—Å—Ç—ä–ø                   ‚îÇ');
    console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
    console.log('‚îÇ admin@iru.bg        ‚îÇ admin123        ‚îÇ –ê–¥–º–∏–Ω - –≤—Å–∏—á–∫–∏ –∫—É—Ä—Å–æ–≤–µ          ‚îÇ');
    console.log('‚îÇ teacher@iru.bg      ‚îÇ teacher123      ‚îÇ –£—á–∏—Ç–µ–ª - 3 –∫—É—Ä—Å–∞               ‚îÇ');
    console.log('‚îÇ student@iru.bg      ‚îÇ student123      ‚îÇ –°—Ç—É–¥–µ–Ω—Ç - –±–∞–∑–æ–≤ –∫—É—Ä—Å            ‚îÇ');
    console.log('‚îÇ student2@iru.bg     ‚îÇ student123      ‚îÇ –°—Ç—É–¥–µ–Ω—Ç - –±–∞–∑–æ–≤ + —Å—Ä–µ–¥–µ–Ω        ‚îÇ');
    console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');
    
    console.log('\nüîß –í–ê–ñ–ù–û: –ó–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏—Ç–µ –≤—ä–≤ Firebase Auth:');
    console.log('1. –û—Ç–∏–¥–µ—Ç–µ –≤ Firebase Console ‚Üí Authentication ‚Üí Users');
    console.log('2. –ù–∞—Ç–∏—Å–Ω–µ—Ç–µ "Add user" –∏ –¥–æ–±–∞–≤–µ—Ç–µ –≥–æ—Ä–Ω–∏—Ç–µ 4 –∞–∫–∞—É–Ω—Ç–∞ —Ä—ä—á–Ω–æ');
    console.log('3. –ò–õ–ò –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ setupDemoWithAuth() –∑–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ');
    
    return true;
  } catch (error) {
    console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏:', error);
    return false;
  }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
export const checkSetup = async () => {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Firebase –≤—Ä—ä–∑–∫–∞—Ç–∞...');
    
    // –¢—É–∫ –º–æ–∂–µ–º –¥–∞ –¥–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞ Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞
    return true;
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–±–ª–µ–º —Å Firebase –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ:', error);
    return false;
  }
};

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø—ä–ª–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ
export const fullSetup = async () => {
  console.log('üîß –ó–∞–ø–æ—á–≤–∞ –ø—ä–ª–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ Firebase
    const isSetup = await checkSetup();
    
    if (isSetup) {
      console.log('\nü§î –ò–∑–±–µ—Ä–µ—Ç–µ –º–µ—Ç–æ–¥ –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏:');
      console.log('1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ (Authentication + Firestore) - –ø—Ä–µ–ø–æ—Ä—ä—á–∞–Ω–æ');
      console.log('2. –°–∞–º–æ Firestore (—Ä—ä—á–Ω–æ –¥–æ–±–∞–≤—è–Ω–µ –≤ Auth)');
      
      // –ó–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–∑–ø–æ–ª–∑–≤–∞–º–µ –Ω–æ–≤–∏—è –º–µ—Ç–æ–¥
      console.log('\nüéØ –ò–∑–ø–æ–ª–∑–≤–∞–º–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏—è –º–µ—Ç–æ–¥...');
      const demoCreated = await setupDemoWithAuth();
      
      if (demoCreated) {
        console.log('\nüéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        console.log('‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏—Ç–µ —Å–∞ —Å—ä–∑–¥–∞–¥–µ–Ω–∏ –≤ Authentication + Firestore');
        console.log('üîë –ú–æ–∂–µ—Ç–µ –≤–µ–¥–Ω–∞–≥–∞ –¥–∞ –≤–ª–µ–∑–µ—Ç–µ —Å –¥–µ–º–æ –∞–∫–∞—É–Ω—Ç–∏—Ç–µ');
        return true;
      } else {
        console.log('\n‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ.');
        console.log('üí° –û–ø–∏—Ç–∞–π—Ç–µ —Ä—ä—á–Ω–æ —Å setupDemo() –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ Firebase –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ');
        return true;
      }
    } else {
      console.log('‚ùå –ü—Ä–æ–±–ª–µ–º —Å Firebase –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ.');
      return false;
    }
  } catch (error) {
    console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞:', error);
    return false;
  }
};

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –µ–¥–∏–Ω–∏—á–µ–Ω –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –æ—Ç –∫–æ–Ω–∑–æ–ª–∞—Ç–∞
export const createSingleUser = async (email, password, role = 'student') => {
  console.log(`üë§ –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: ${email}`);
  
  try {
    const { createNewUser } = await import('../services/userService');
    
    const result = await createNewUser(email, password, {
      role: role,
      displayName: email.split('@')[0]
    });
    
    
    if (result.success) {
      console.log(`‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª ${email} —Å—ä–∑–¥–∞–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
      console.log(`üîë Email: ${email} | Password: ${password} | Role: ${role}`);
      return true;
    } else {
      console.error(`‚ùå –ì—Ä–µ—à–∫–∞: ${result.error}`);
      return false;
    }
  } catch (error) {
    console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª:', error);
    return false;
  }
};

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –º–∞—Å–æ–≤–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏
export const createBulkUsers = async (users) => {
  console.log(`üë• –ú–∞—Å–æ–≤–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ ${users.length} –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏...`);
  
  const results = [];
  
  for (const userData of users) {
    try {
      const { email, password, role, displayName } = userData;
      
      if (!email || !password) {
        console.log(`‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–º–µ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª: ${JSON.stringify(userData)}`);
        continue;
      }
      
      const result = await createSingleUser(email, password, role || 'student');
      results.push({ email, success: result });
      
      // –ú–∞–ª–∫–∞ –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞—è–≤–∫–∏—Ç–µ
      await new Promise(resolve => setTimeout(resolve, 500));
      
    } catch (error) {
      console.error(`‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ ${userData.email}:`, error);
      results.push({ email: userData.email, success: false });
    }
  }
  
  const successCount = results.filter(r => r.success).length;
  console.log(`\nüìä –†–µ–∑—É–ª—Ç–∞—Ç: ${successCount}/${users.length} –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ —Å—ä–∑–¥–∞–¥–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ`);
  
  return results;
};

// –ê–∫–æ —Ñ–∞–π–ª—ä—Ç —Å–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–∞ –¥–∏—Ä–µ–∫—Ç–Ω–æ, —Å—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ç–∞
if (typeof window !== 'undefined' && window.location) {
  // –î–æ–±–∞–≤—è–º–µ —Ñ—É–Ω–∫—Ü–∏–∏—Ç–µ –∫—ä–º window –æ–±–µ–∫—Ç–∞ –∑–∞ –ª–µ—Å–Ω–æ –∏–∑–≤–∏–∫–≤–∞–Ω–µ –æ—Ç –∫–æ–Ω–∑–æ–ª–∞—Ç–∞
  window.setupDemo = setupDemo;
  window.setupDemoWithAuth = setupDemoWithAuth;
  window.checkSetup = checkSetup;
  window.fullSetup = fullSetup;
  window.createSingleUser = createSingleUser;
  window.createBulkUsers = createBulkUsers;
  
  console.log('üõ†Ô∏è Demo setup —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∞ –¥–æ—Å—Ç—ä–ø–Ω–∏ –≤ –∫–æ–Ω–∑–æ–ª–∞—Ç–∞:');
  console.log('');
  console.log('üìã –û–°–ù–û–í–ù–ò –ö–û–ú–ê–ù–î–ò:');
  console.log('  window.fullSetup()              - –ü—ä–ª–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞');
  console.log('  window.setupDemoWithAuth()      - –°—ä–∑–¥–∞–≤–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ –≤ Auth + Firestore');
  console.log('  window.setupDemo()              - –°—ä–∑–¥–∞–≤–∞ –¥–µ–º–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ —Å–∞–º–æ –≤—ä–≤ Firestore');
  console.log('');
  console.log('üë§ –°–™–ó–î–ê–í–ê–ù–ï –ù–ê –ü–û–¢–†–ï–ë–ò–¢–ï–õ–ò:');
  console.log('  window.createSingleUser("email@example.com", "password123", "student")');
  console.log('  window.createBulkUsers([{email: "test@test.com", password: "123", role: "student"}])');
  console.log('');
  console.log('üîß –ü–û–ú–û–©–ù–ò:');
  console.log('  window.checkSetup()             - –ü—Ä–æ–≤–µ—Ä—è–≤–∞ Firebase –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ');
  console.log('');
  console.log('üí° –ü–†–ï–ü–û–†–™–ö–ò:');
  console.log('  ‚Ä¢ –ó–∞ –ø—ä—Ä–≤–æ–Ω–∞—á–∞–ª–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: window.fullSetup()');
  console.log('  ‚Ä¢ –ó–∞ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –Ω–æ–≤–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏: window.createSingleUser()');
  console.log('  ‚Ä¢ –ê–∫–æ –∏–º–∞—Ç–µ –ø—Ä–æ–±–ª–µ–º–∏: window.checkSetup()');
}