// src/components/navigation.jsx - –ü–æ–¥–æ–±—Ä–µ–Ω–∞ –≤–µ—Ä—Å–∏—è —Å Bootstrap —Ñ–∏–∫—Å
import React, { useState, useEffect } from "react";
import { Link, useLocation } from "react-router-dom";
import { useAuth } from '../contexts/AuthContext';
import UserProfile from './UserProfile';
import Login from './Login';
import { LogIn } from 'lucide-react';

export const Navigation = (props) => {
  const { isAuthenticated, user } = useAuth();
  const [showLogin, setShowLogin] = useState(false);
  const location = useLocation();

  const handleLoginSuccess = () => {
    setShowLogin(false);
  };

  const handleLogout = () => {
    // –õ–æ–≥–∏–∫–∞—Ç–∞ –∑–∞ logout —Å–µ –æ–±—Ä–∞–±–æ—Ç–≤–∞ –≤ UserProfile –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  };

  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ —Å–º–µ –Ω–∞ –Ω–∞—á–∞–ª–Ω–∞—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞ –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞–º–µ anchor links
  const isHomePage = location.pathname === '/';

  // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–∞–º–µ —á–µ Bootstrap JavaScript —Ä–∞–±–æ—Ç–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ jQuery –∏ Bootstrap —Å–∞ –∑–∞—Ä–µ–¥–µ–Ω–∏
    const ensureBootstrapWorks = () => {
      if (typeof window.$ !== 'undefined' && window.$.fn.collapse) {
        // Bootstrap –µ –∑–∞—Ä–µ–¥–µ–Ω, –∞–∫—Ç–∏–≤–∏—Ä–∞–º–µ collapse —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç—Ç–∞
        window.$('.navbar-toggle').off('click').on('click', function() {
          const target = window.$(this).attr('data-target');
          window.$(target).collapse('toggle');
        });
      } else {
        // –û–ø–∏—Ç–≤–∞–º–µ –æ—Ç–Ω–æ–≤–æ —Å–ª–µ–¥ –º–∞–ª–∫–æ
        setTimeout(ensureBootstrapWorks, 100);
      }
    };

    ensureBootstrapWorks();
  }, []);

  return (
    <>
      <nav id="menu" className="navbar navbar-default navbar-fixed-top">
        <div className="container">
          <div className="navbar-header">
            <button
              type="button"
              className="navbar-toggle collapsed"
              data-toggle="collapse"
              data-target="#bs-example-navbar-collapse-1"
              aria-expanded="false"
              aria-controls="bs-example-navbar-collapse-1"
            >
              <span className="sr-only">Toggle navigation</span>
              <span className="icon-bar"></span>
              <span className="icon-bar"></span>
              <span className="icon-bar"></span>
            </button>
            <Link to="/">
              <img
                src="./img/logo/logo14.jpg"
                alt=""
                className="w-[100px] absolute top-0 rounded-full sm:w-[150px] sm:top-[-40px] md:w-[200px]"
              />
            </Link>
          </div>

          <div
            className="collapse navbar-collapse"
            id="bs-example-navbar-collapse-1"
          >
            <ul className="nav navbar-nav navbar-right text-3xl md:text-xl lg:text-3xl">
              {isHomePage ? (
                // Anchor links –∑–∞ –Ω–∞—á–∞–ª–Ω–∞—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                <>
                  <li>
                    <a href="#features" className="page-scroll">
                      –ö–∞–∫–≤–æ –ø—Ä–µ–¥–ª–∞–≥–∞–º–µ
                    </a>
                  </li>
                  <li>
                    <a href="#about" className="page-scroll">
                      –ó–∞ –Ω–∞—Å
                    </a>
                  </li>
                  <li>
                    <a href="#courses" className="page-scroll">
                      –ö—É—Ä—Å–æ–≤–µ
                    </a>
                  </li>
                  <li>
                    <a href="#team" className="page-scroll">
                      –ù–∞—à–∏—è—Ç –µ–∫–∏–ø
                    </a>
                  </li>
                  <li>
                    <Link to="/courses" className="page-scroll">
                      –û–±—É—á–µ–Ω–∏—è
                      {!isAuthenticated && (
                        <span className="ml-1 text-xs bg-yellow-500 text-white px-2 py-1 rounded-full">
                          üîí
                        </span>
                      )}
                    </Link>
                  </li>
                  <li>
                    <a href="#contact" className="page-scroll">
                      –ö–æ–Ω—Ç–∞–∫—Ç–∏
                    </a>
                  </li>
                </>
              ) : (
                // Route links –∑–∞ –¥—Ä—É–≥–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∏
                <>
                  <li>
                    <Link to="/#features" className="page-scroll">
                      –ö–∞–∫–≤–æ –ø—Ä–µ–¥–ª–∞–≥–∞–º–µ
                    </Link>
                  </li>
                  <li>
                    <Link to="/#about" className="page-scroll">
                      –ó–∞ –Ω–∞—Å
                    </Link>
                  </li>
                  <li>
                    <Link to="/#courses" className="page-scroll">
                      –ö—É—Ä—Å–æ–≤–µ
                    </Link>
                  </li>
                  <li>
                    <Link to="/#team" className="page-scroll">
                      –ù–∞—à–∏—è—Ç –µ–∫–∏–ø
                    </Link>
                  </li>
                  <li>
                    <Link 
                      to="/courses" 
                      className={`page-scroll ${
                        location.pathname === '/courses' || location.pathname.startsWith('/course/') 
                          ? 'text-blue-600 font-semibold' 
                          : ''
                      }`}
                    >
                      –û–±—É—á–µ–Ω–∏—è
                      {!isAuthenticated && (
                        <span className="ml-1 text-xs bg-yellow-500 text-white px-2 py-1 rounded-full">
                          üîí
                        </span>
                      )}
                    </Link>
                  </li>
                  <li>
                    <Link to="/#contact" className="page-scroll">
                      –ö–æ–Ω—Ç–∞–∫—Ç–∏
                    </Link>
                  </li>
                </>
              )}
              
              {/* Authentication Section */}
              <li className="flex items-center ml-4">
                {isAuthenticated ? (
                  <UserProfile user={user} onLogout={handleLogout} />
                ) : (
                  <button
                    onClick={() => setShowLogin(true)}
                    className="flex items-center space-x-2 bg-gradient-to-r from-purple-600 to-blue-700 text-white px-4 py-2 rounded-full hover:from-purple-700 hover:to-blue-800 transition-all duration-200 shadow-md"
                  >
                    <LogIn size={16} />
                    <span className="hidden md:inline">–í—Ö–æ–¥</span>
                  </button>
                )}
              </li>
            </ul>
          </div>
        </div>
      </nav>

      {/* Login Modal */}
      {showLogin && !isAuthenticated && (
        <Login 
          onClose={() => setShowLogin(false)}
          onLoginSuccess={handleLoginSuccess}
        />
      )}
    </>
  );
};