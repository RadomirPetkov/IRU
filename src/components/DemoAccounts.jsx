// src/components/DemoAccounts.jsx
import React, { useState } from 'react';
import { loginUser } from '../firebaseAuth';
import { User, Shield, GraduationCap, BookOpen } from 'lucide-react';

const DemoAccounts = ({ onLoginSuccess, onClose }) => {
  const [loading, setLoading] = useState(false);
  const [selectedAccount, setSelectedAccount] = useState(null);

  const demoAccounts = [
    {
      email: 'admin@iru.bg',
      password: 'admin123',
      role: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      description: '–ü—ä–ª–µ–Ω –¥–æ—Å—Ç—ä–ø –¥–æ –≤—Å–∏—á–∫–∏ –∫—É—Ä—Å–æ–≤–µ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è',
      icon: Shield,
      color: 'from-red-500 to-red-600',
      bgColor: 'bg-red-50',
      textColor: 'text-red-800',
      features: ['–í—Å–∏—á–∫–∏ –∫—É—Ä—Å–æ–≤–µ', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª']
    },
    {
      email: 'teacher@iru.bg',
      password: 'teacher123',
      role: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª',
      description: '–î–æ—Å—Ç—ä–ø –¥–æ –∫—É—Ä—Å–æ–≤–µ –∏ –ø—Ä–µ–≥–ª–µ–¥ –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å–∞ –Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–∏—Ç–µ',
      icon: GraduationCap,
      color: 'from-green-500 to-green-600',
      bgColor: 'bg-green-50',
      textColor: 'text-green-800',
      features: ['3 –∫—É—Ä—Å–∞ –¥–æ—Å—Ç—ä–ø–Ω–∏', '–ü—Ä–µ–≥–ª–µ–¥ –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ']
    },
    {
      email: 'student@iru.bg',
      password: 'student123',
      role: '–°—Ç—É–¥–µ–Ω—Ç',
      description: '–î–æ—Å—Ç—ä–ø –¥–æ –±–∞–∑–æ–≤–∏—è –∫—É—Ä—Å –∑–∞ –Ω–∞—á–∏–Ω–∞–µ—â–∏',
      icon: User,
      color: 'from-blue-500 to-blue-600',
      bgColor: 'bg-blue-50',
      textColor: 'text-blue-800',
      features: ['1 –∫—É—Ä—Å –¥–æ—Å—Ç—ä–ø–µ–Ω', '–ü—Ä–æ—Å–ª–µ–¥—è–≤–∞–Ω–µ –ø—Ä–æ–≥—Ä–µ—Å', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∏']
    },
    {
      email: 'student2@iru.bg',
      password: 'student123',
      role: '–ù–∞–ø—Ä–µ–¥–Ω–∞–ª —Å—Ç—É–¥–µ–Ω—Ç',
      description: '–î–æ—Å—Ç—ä–ø –¥–æ –±–∞–∑–æ–≤ –∏ —Å—Ä–µ–¥–µ–Ω –∫—É—Ä—Å',
      icon: BookOpen,
      color: 'from-purple-500 to-purple-600',
      bgColor: 'bg-purple-50',
      textColor: 'text-purple-800',
      features: ['2 –∫—É—Ä—Å–∞ –¥–æ—Å—Ç—ä–ø–Ω–∏', '–ù–∞–ø—Ä–µ–¥–Ω–∞–ª–∏ —É–º–µ–Ω–∏—è', '–î–µ—Ç–∞–π–ª–µ–Ω –ø—Ä–æ–≥—Ä–µ—Å']
    }
  ];

  const handleLogin = async (account) => {
    setLoading(true);
    setSelectedAccount(account.email);
    
    try {
      const result = await loginUser(account.email, account.password);
      
      if (result.success) {
        console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–ª–∏–∑–∞–Ω–µ —Å –¥–µ–º–æ –∞–∫–∞—É–Ω—Ç:', account.email);
        onLoginSuccess && onLoginSuccess(result.user);
      } else {
        console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–ª–∏–∑–∞–Ω–µ:', result.error);
        alert(`–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–ª–∏–∑–∞–Ω–µ: ${result.error}`);
      }
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–ª–∏–∑–∞–Ω–µ:', error);
      alert('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–ª–∏–∑–∞–Ω–µ. –ú–æ–ª—è –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.');
    } finally {
      setLoading(false);
      setSelectedAccount(null);
    }
  };

  return (
    <div className="space-y-4">
      <div className="text-center mb-6">
        <h3 className="text-lg font-semibold text-gray-800 mb-2">
          üöÄ –î–µ–º–æ –∞–∫–∞—É–Ω—Ç–∏ –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ
        </h3>
        <p className="text-sm text-gray-600">
          –ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ –µ–¥–∏–Ω –æ—Ç –≥–æ—Ç–æ–≤–∏—Ç–µ –∞–∫–∞—É–Ω—Ç–∏ –∑–∞ –±—ä—Ä–∑–æ –≤–ª–∏–∑–∞–Ω–µ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {demoAccounts.map((account) => {
          const IconComponent = account.icon;
          const isLoading = loading && selectedAccount === account.email;
          
          return (
            <div
              key={account.email}
              className={`${account.bgColor} border border-gray-200 rounded-lg p-4 transition-all duration-200 hover:shadow-md cursor-pointer ${
                isLoading ? 'opacity-50 cursor-not-allowed' : 'hover:scale-105'
              }`}
              onClick={() => !loading && handleLogin(account)}
            >
              <div className="flex items-start space-x-4">
                <div className={`bg-gradient-to-r ${account.color} rounded-full p-3 flex-shrink-0`}>
                  <IconComponent className="text-white" size={24} />
                </div>
                
                <div className="flex-1 min-w-0">
                  <div className="flex items-center justify-between mb-2">
                    <h4 className={`font-bold ${account.textColor}`}>
                      {account.role}
                    </h4>
                    {isLoading && (
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-current"></div>
                    )}
                  </div>
                  
                  <p className="text-sm text-gray-600 mb-3 leading-relaxed">
                    {account.description}
                  </p>
                  
                  <div className="space-y-1 mb-3">
                    <div className="text-xs font-mono bg-white bg-opacity-50 rounded px-2 py-1">
                      {account.email}
                    </div>
                    <div className="text-xs text-gray-500">
                      –ü–∞—Ä–æ–ª–∞: {account.password}
                    </div>
                  </div>
                  
                  <div className="flex flex-wrap gap-1">
                    {account.features.map((feature, index) => (
                      <span
                        key={index}
                        className="inline-block bg-white bg-opacity-60 text-xs px-2 py-1 rounded-full text-gray-700"
                      >
                        {feature}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
              
              <div className="mt-4 text-center">
                <div className={`bg-gradient-to-r ${account.color} text-white px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${
                  isLoading ? 'opacity-75' : 'hover:shadow-lg'
                }`}>
                  {isLoading ? '–í–ª–∏–∑–∞–Ω–µ...' : '–í–ª–∏–∑–∞–Ω–µ —Å —Ç–æ–∑–∏ –∞–∫–∞—É–Ω—Ç'}
                </div>
              </div>
            </div>
          );
        })}
      </div>

      <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mt-6">
        <div className="flex items-start">
          <div className="flex-shrink-0">
            <div className="text-yellow-400">‚ö†Ô∏è</div>
          </div>
          <div className="ml-3">
            <h4 className="text-sm font-medium text-yellow-800">
              –í–∞–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </h4>
            <div className="mt-2 text-sm text-yellow-700">
              <ul className="list-disc list-inside space-y-1">
                <li>–¢–µ–∑–∏ –∞–∫–∞—É–Ω—Ç–∏ —Å–∞ —Å–∞–º–æ –∑–∞ –¥–µ–º–æ —Ü–µ–ª–∏</li>
                <li>–î–∞–Ω–Ω–∏—Ç–µ –º–æ–≥–∞—Ç –¥–∞ –±—ä–¥–∞—Ç –∏–∑—Ç—Ä–∏—Ç–∏ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ</li>
                <li>–ó–∞ —Ä–µ–∞–ª–Ω–æ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ, —Å—ä–∑–¥–∞–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω –∞–∫–∞—É–Ω—Ç</li>
                <li>–ù–µ —Å–ø–æ–¥–µ–ª—è–π—Ç–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –¥–µ–º–æ –∞–∫–∞—É–Ω—Ç–∏—Ç–µ</li>
              </ul>
            </div>
          </div>
        </div>
      </div>

      <div className="text-center pt-4 border-t border-gray-200">
        <button
          onClick={onClose}
          className="text-gray-600 hover:text-gray-800 text-sm underline"
          disabled={loading}
        >
          –ò–∑–ø–æ–ª–∑–≤–∞–π —Å–æ–±—Å—Ç–≤–µ–Ω –∞–∫–∞—É–Ω—Ç
        </button>
      </div>
    </div>
  );
};

export default DemoAccounts;