// src/data/coursesData.js - –û–±–Ω–æ–≤–µ–Ω–∞ –≤–µ—Ä—Å–∏—è —Å Firestore –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
import { 
  getAllCourses as getFirestoreCourses,
  getCourse as getFirestoreCourse 
} from '../firebase/courses';

// –ö–µ—à –∑–∞ –∫—É—Ä—Å–æ–≤–µ—Ç–µ
let coursesCache = null;
let cacheTimestamp = null;
const CACHE_DURATION = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç–∏

// –§–æ–ª–±–µ–∫ —Å—Ç–∞—Ç–∏—á–Ω–∏ –∫—É—Ä—Å–æ–≤–µ (–∞–∫–æ Firestore –Ω–µ –µ –¥–æ—Å—Ç—ä–ø–µ–Ω)
const fallbackCourses = [
  {
    id: 'basic',
    title: '–¶–∏—Ñ—Ä–æ–≤–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç - –ë–∞–∑–æ–≤–æ –Ω–∏–≤–æ',
    description: '–û—Å–Ω–æ–≤–Ω–∏ —É–º–µ–Ω–∏—è –∑–∞ —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–º–ø—é—Ç—ä—Ä –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç',
    level: 1,
    color: 'from-green-500 to-green-600',
    icon: 'üì±',
    prerequisite: null,
    estimatedHours: 8,
    isActive: true,
    videos: [
      {
        id: 'basic-1',
        title: '–í—ä–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–æ–º–ø—é—Ç—Ä–∏—Ç–µ',
        url: 'https://www.youtube.com/watch?v=example1',
        description: '–û—Å–Ω–æ–≤–Ω–∏ –ø–æ–Ω—è—Ç–∏—è –∑–∞ —Ö–∞—Ä–¥—É–µ—Ä –∏ —Å–æ—Ñ—Ç—É–µ—Ä. –ö–∞–∫–≤–æ –µ –∫–æ–º–ø—é—Ç—ä—Ä –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∏.',
        duration: '15:30',
        order: 1,
        category: '–ë–∞–∑–æ–≤–æ –Ω–∏–≤–æ'
      },
      {
        id: 'basic-2',
        title: '–†–∞–±–æ—Ç–∞ —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞ —Å–∏—Å—Ç–µ–º–∞',
        url: 'https://www.youtube.com/watch?v=example2',
        description: '–ù–∞–≤–∏–≥–∞—Ü–∏—è –≤—ä–≤ Windows, —Ñ–∞–π–ª–æ–≤–µ –∏ –ø–∞–ø–∫–∏, –æ—Å–Ω–æ–≤–Ω–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.',
        duration: '22:45',
        order: 2,
        category: '–ë–∞–∑–æ–≤–æ –Ω–∏–≤–æ'
      },
      {
        id: 'basic-3',
        title: '–û—Å–Ω–æ–≤–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±—Ä–∞—É–∑—ä—Ä–∏—Ç–µ',
        url: 'https://www.youtube.com/watch?v=example3',
        description: '–ö–∞–∫ –¥–∞ —Å—ä—Ä—Ñ–∏—Ä–∞–º–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —Ç—ä—Ä—Å–∞—á–∫–∏ –∏ —Å–æ—Ü–∏–∞–ª–Ω–∏ –º—Ä–µ–∂–∏.',
        duration: '18:20',
        order: 3,
        category: '–ë–∞–∑–æ–≤–æ –Ω–∏–≤–æ'
      },
      {
        id: 'basic-4',
        title: '–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—â–∞ –∏ –∫–æ–º—É–Ω–∏–∫–∞—Ü–∏—è',
        url: 'https://www.youtube.com/watch?v=example4',
        description: '–°—ä–∑–¥–∞–≤–∞–Ω–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∏–º–µ–π–ª –∞–∫–∞—É–Ω—Ç, –µ—Ç–∏–∫–µ—Ç –≤ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—Ç–∞ –∫–æ–º—É–Ω–∏–∫–∞—Ü–∏—è.',
        duration: '20:15',
        order: 4,
        category: '–ë–∞–∑–æ–≤–æ –Ω–∏–≤–æ'
      }
    ]
  },
  {
    id: 'intermediate',
    title: '–¶–∏—Ñ—Ä–æ–≤–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç - –°—Ä–µ–¥–Ω–æ –Ω–∏–≤–æ',
    description: '–ù–∞–ø—Ä–µ–¥–Ω–∞–ª–∏ —É–º–µ–Ω–∏—è –∑–∞ –æ—Ñ–∏—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∫–æ–º—É–Ω–∏–∫–∞—Ü–∏—è',
    level: 2,
    color: 'from-blue-500 to-blue-600',
    icon: 'üíº',
    prerequisite: 'basic',
    estimatedHours: 12,
    isActive: true,
    videos: [
      {
        id: 'intermediate-1',
        title: 'Microsoft Word - –ù–∞–ø—Ä–µ–¥–Ω–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏',
        url: 'https://www.youtube.com/watch?v=example5',
        description: '–°—Ç–∏–ª–æ–≤–µ, —à–∞–±–ª–æ–Ω–∏, —Å—ä–≤–º–µ—Å—Ç–Ω–∞ —Ä–∞–±–æ—Ç–∞ –∏ —Ä–µ—Ü–µ–Ω–∑–∏—Ä–∞–Ω–µ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∏.',
        duration: '25:10',
        order: 1,
        category: '–°—Ä–µ–¥–Ω–æ –Ω–∏–≤–æ'
      },
      {
        id: 'intermediate-2',
        title: 'Excel –∑–∞ –±–∏–∑–Ω–µ—Å',
        url: 'https://www.youtube.com/watch?v=example6',
        description: '–§–æ—Ä–º—É–ª–∏, —Ñ—É–Ω–∫—Ü–∏–∏, –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑ –Ω–∞ –¥–∞–Ω–Ω–∏ –≤ Excel.',
        duration: '30:15',
        order: 2,
        category: '–°—Ä–µ–¥–Ω–æ –Ω–∏–≤–æ'
      },
      {
        id: 'intermediate-3',
        title: 'PowerPoint –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏',
        url: 'https://www.youtube.com/watch?v=example7',
        description: '–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–Ω–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ —Å –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏ –µ–ª–µ–º–µ–Ω—Ç–∏.',
        duration: '20:40',
        order: 3,
        category: '–°—Ä–µ–¥–Ω–æ –Ω–∏–≤–æ'
      },
      {
        id: 'intermediate-4',
        title: '–û–±–ª–∞—á–Ω–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        url: 'https://www.youtube.com/watch?v=example8',
        description: 'Google Drive, OneDrive, —Å–ø–æ–¥–µ–ª—è–Ω–µ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞ —Ñ–∞–π–ª–æ–≤–µ.',
        duration: '18:30',
        order: 4,
        category: '–°—Ä–µ–¥–Ω–æ –Ω–∏–≤–æ'
      }
    ]
  }
];

/**
 * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –∫—É—Ä—Å–æ–≤–µ (—Å –∫–µ—à)
 */
export const courses = async () => {
  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –∫–µ—à–∞
  if (coursesCache && cacheTimestamp && (Date.now() - cacheTimestamp < CACHE_DURATION)) {
    return coursesCache;
  }

  try {
    console.log('üîÑ –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ –æ—Ç Firestore...');
    const result = await getFirestoreCourses();
    
    if (result.success && result.data.length > 0) {
      // –§–∏–ª—Ç—Ä–∏—Ä–∞–º–µ —Å–∞–º–æ –∞–∫—Ç–∏–≤–Ω–∏—Ç–µ –∫—É—Ä—Å–æ–≤–µ
      const activeCourses = result.data.filter(course => course.isActive !== false);
      
      // –°–æ—Ä—Ç–∏—Ä–∞–º–µ –≤–∏–¥–µ–∞—Ç–∞ –≤—ä–≤ –≤—Å–µ–∫–∏ –∫—É—Ä—Å –ø–æ order
      const sortedCourses = activeCourses.map(course => ({
        ...course,
        videos: (course.videos || []).sort((a, b) => (a.order || 0) - (b.order || 0))
      }));
      
      // –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–º–µ –∫–µ—à–∞
      coursesCache = sortedCourses;
      cacheTimestamp = Date.now();
      
      console.log(`‚úÖ –ó–∞—Ä–µ–¥–µ–Ω–∏ ${sortedCourses.length} –∫—É—Ä—Å–∞ –æ—Ç Firestore`);
      return sortedCourses;
    } else {
      console.log('‚ö†Ô∏è –ù—è–º–∞ –∫—É—Ä—Å–æ–≤–µ –≤ Firestore, –∏–∑–ø–æ–ª–∑–≤–∞–º–µ fallback –¥–∞–Ω–Ω–∏');
      return fallbackCourses;
    }
  } catch (error) {
    console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –æ—Ç Firestore:', error);
    console.log('üîÑ –ò–∑–ø–æ–ª–∑–≤–∞–º–µ fallback –¥–∞–Ω–Ω–∏');
    return fallbackCourses;
  }
};

/**
 * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å –ø–æ ID
 */
export const getCourseById = async (courseId) => {
  try {
    // –ü—ä—Ä–≤–æ –æ–ø–∏—Ç–≤–∞–º–µ –æ—Ç Firestore
    const result = await getFirestoreCourse(courseId);
    
    if (result.success) {
      // –°–æ—Ä—Ç–∏—Ä–∞–º–µ –≤–∏–¥–µ–∞—Ç–∞ –ø–æ order
      const course = {
        ...result.data,
        videos: (result.data.videos || []).sort((a, b) => (a.order || 0) - (b.order || 0))
      };
      return course;
    }
    
    // Fallback –∫—ä–º —Å—Ç–∞—Ç–∏—á–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏
    const fallbackCourse = fallbackCourses.find(course => course.id === courseId);
    return fallbackCourse || null;
  } catch (error) {
    console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å:', error);
    
    // Fallback –∫—ä–º —Å—Ç–∞—Ç–∏—á–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏
    const fallbackCourse = fallbackCourses.find(course => course.id === courseId);
    return fallbackCourse || null;
  }
};

/**
 * –°–∏–Ω—Ö—Ä–æ–Ω–µ–Ω –¥–æ—Å—Ç—ä–ø –¥–æ –∫–µ—à–∏—Ä–∞–Ω–∏—Ç–µ –∫—É—Ä—Å–æ–≤–µ
 */
export const getCachedCourses = () => {
  if (coursesCache) {
    return coursesCache;
  }
  
  // –ê–∫–æ –Ω—è–º–∞ –∫–µ—à, –≤—Ä—ä—â–∞–º–µ fallback –¥–∞–Ω–Ω–∏—Ç–µ
  return fallbackCourses;
};

/**
 * –ò–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ –∫–µ—à–∞ (–∑–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª–Ω–æ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ)
 */
export const clearCoursesCache = () => {
  coursesCache = null;
  cacheTimestamp = null;
  console.log('üóëÔ∏è –ö–µ—à—ä—Ç –Ω–∞ –∫—É—Ä—Å–æ–≤–µ—Ç–µ –µ –∏–∑—á–∏—Å—Ç–µ–Ω');
};

/**
 * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –∫—É—Ä—Å–æ–≤–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (–∑–∞ —Å—ä–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç)
 */
export const getAllCourses = () => {
  // –ó–∞ backward compatibility
  return getCachedCourses();
};

/**
 * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ –ø–æ –Ω–∏–≤–æ
 */
export const getCoursesByLevel = async (level) => {
  const allCourses = await courses();
  return allCourses.filter(course => course.level === level);
};

/**
 * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª–Ω–∏—Ç–µ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è
 */
export const getPrerequisites = async (courseId) => {
  const course = await getCourseById(courseId);
  if (!course || !course.prerequisite) return [];
  
  const prerequisiteCourse = await getCourseById(course.prerequisite);
  return prerequisiteCourse ? [prerequisiteCourse] : [];
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –∫—É—Ä—Å—ä—Ç –∏–º–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª–Ω–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è
 */
export const hasPrerequisites = async (courseId) => {
  const course = await getCourseById(courseId);
  return course && course.prerequisite;
};

/**
 * –ü–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ –∫—É—Ä—Å–æ–≤–µ—Ç–µ
 */
export const getCoursesStats = async () => {
  try {
    const allCourses = await courses();
    const totalVideos = allCourses.reduce((sum, course) => sum + (course.videos?.length || 0), 0);
    const totalHours = allCourses.reduce((sum, course) => sum + (course.estimatedHours || 0), 0);
    const averageVideosPerCourse = allCourses.length > 0 ? totalVideos / allCourses.length : 0;
    
    return {
      totalCourses: allCourses.length,
      totalVideos,
      totalHours,
      averageVideosPerCourse: Math.round(averageVideosPerCourse * 10) / 10,
      coursesByLevel: allCourses.reduce((acc, course) => {
        acc[`level${course.level}`] = (acc[`level${course.level}`] || 0) + 1;
        return acc;
      }, {}),
      lastUpdated: new Date().toISOString()
    };
  } catch (error) {
    console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    return {
      totalCourses: 0,
      totalVideos: 0,
      totalHours: 0,
      averageVideosPerCourse: 0,
      coursesByLevel: {},
      lastUpdated: new Date().toISOString()
    };
  }
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –∏–º–∞ –Ω–æ–≤–∏ –∫—É—Ä—Å–æ–≤–µ –≤ Firestore
 */
export const checkForUpdates = async () => {
  try {
    const result = await getFirestoreCourses();
    if (result.success) {
      const firestoreCount = result.data.filter(c => c.isActive !== false).length;
      const cacheCount = coursesCache ? coursesCache.length : 0;
      
      return {
        hasUpdates: firestoreCount !== cacheCount,
        firestoreCount,
        cacheCount
      };
    }
    return { hasUpdates: false, firestoreCount: 0, cacheCount: 0 };
  } catch (error) {
    return { hasUpdates: false, error: error.message };
  }
};

/**
 * –§–æ—Ä—Å–∏—Ä–∞–Ω–æ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫—É—Ä—Å–æ–≤–µ—Ç–µ
 */
export const reloadCourses = async () => {
  clearCoursesCache();
  return await courses();
};

// –ï–∫—Å–ø–æ—Ä—Ç–∏—Ä–∞–º–µ –æ—Å–Ω–æ–≤–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞ –æ–±—Ä–∞—Ç–Ω–∞ —Å—ä–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç
export default {
  courses,
  getCourseById,
  getAllCourses,
  getCoursesByLevel,
  getPrerequisites,
  hasPrerequisites,
  getCoursesStats,
  clearCoursesCache,
  checkForUpdates,
  reloadCourses
};